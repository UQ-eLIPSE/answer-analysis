#-----------------------------------
# Python Quiz File Sorter
# Chao Feng
# 15 Feb 2010
#
# This version: 1.11a - 6 Sept 2010
# Adds html output with student photo matching and mailto option
#-----------------------------------

# Requires input .csv input file in same folder
import os
import csv
import re
import sys
import platform

# Define html tag remover
def strip_tags(data):
    p = re.compile(r'<.*?>')
    return p.sub('', data)

fileName = sys.argv[1]
directoryName = sys.argv[2]
filepath = os.path.abspath(directoryName + '/' + fileName)

# Read in data, convert from utf16 to unicode, strip html tags
f_uni = strip_tags(unicode(open(filepath,'r').read(), 'utf-16'))

# Convert to UTF-8 and write to file. It won't work to just plug the utf8 output into the csv reader without writing it to file first.
f_utf8 = f_uni.encode('utf-8')
ff = open('/tmp/temp_file.csv',"w")
ff.write(f_utf8)
ff.close()

# Read in again via csv reader, specifying tab delimited entries
f = csv.reader(open('/tmp/temp_file.csv','r'), delimiter='\t');
   
# Loop to write data to individual files
oldStudentID = "s0000000"
firstRow = 1;
answeredCounter = 0;
numStudentsCounter = 0;

#print '[Step 3/4] Writing output...'

for row in f:

    # Skip First row, which is just titles
    if firstRow == 1:
        firstRow = 0
        numQ = (len(row)-3)/6        
        # This number should be an integer. Otherwise, things get hairy...
            
    # Not first row, do the normal output    
    else:     
        numStudentsCounter = numStudentsCounter + 1
        #ff = open(directoryName + '/' + directoryName + '/' + row[1] + row[2] + "_" +  row[0] + "_" + directoryName + '.txt',"w")
        #ff.writelines(row[2] + ' ' + row[1] + '\n' + row[0] + '\n\n')
        kk = 0;
        while (kk < numQ):
            #ff.writelines('Q' + str(kk+1) + '\n' + row[5 + 6*kk] + '\n\n')
            #ff.close
            #fcol = open(directoryName + '/collated_q' + str(kk+1) + '_' +  directoryName + '.txt',"a")
            if row[5 + 6*kk] != '':
                answeredCounter = answeredCounter + 1
                #fcol.writelines(row[5 + 6*kk] + '\n\n\n')
            #fcol.close
            kk = kk + 1

# Write html output for collated responses with photo of student
#print '           Writing html output...'

f2 = csv.reader(open('/tmp/temp_file.csv','r'), delimiter='\t');
tt = 0
while (tt < numQ):
    #fface = open(directoryName + '/q' + str(tt+1) + '.csv',"a")
    fface = csv.writer(open(directoryName + '/data/q' + str(tt+1) + '.csv', "a"), quoting=csv.QUOTE_NONNUMERIC)
    fface.writerow(["studentid","answer","question","firstname","lastname"])
    #fface.writelines('<html>\n<head>\n<title> Results for ' + directoryName + ' Question ' + str(tt+1) + '</title>\n<!-- Template Generated by qsort.py -->\n</head>\n<h1>Question ' + str(tt+1) + '</h1><table border = "1">\n')
    #fface.close
    tt = tt + 1

firstRow = 1
for row in f2:
    if firstRow == 1:
        firstRow = 0
        numQ = (len(row)-3)/6 
    else:     
        kk = 0;
        while (kk < numQ):
            #fface = open(directoryName + '/q' + str(kk+1) + '.html',"a")
            #fface.writelines('"' + row[0] + '"', row[5 + 6*kk])
            #fface.writelines('<tr>\n<td><img border="0" src="../photos/' + row[0] + '.jpeg" width="120" height="160"> </td>\n<td align="left" valign="top"  width="500"> ' + row[2] + ' ' + row[1] + ' | Email: <a href="mailto:' + row[0] + '@student.uq.edu.au" >' + row[0] + '</a>  | Question ' + str(kk+1) + '\n<br><br>\n' + row[5 + 6*kk] + '\n</td></tr>')
            fface = csv.writer(open(directoryName + '/data/q' + str(kk+1) + '.csv', "a"), quoting=csv.QUOTE_NONNUMERIC)
            fface.writerow([row[0] ,row[5 + 6*kk], row[6 + 6*kk], row[1], row[2]])
            #fface.close
            kk = kk + 1

tt = 0

statsfile = open(directoryName + '/data/stats.html',"a")
statsfile.writelines('Quiz had ' + str(numQ) + ' questions. There were ' + str(numStudentsCounter) + ' students who took part.<br/>')
statsfile.writelines('There was a total of ' + str(answeredCounter) + ' questions attempted.<br/>')
averageAns = answeredCounter/float(numStudentsCounter);
statsfile.writelines('Students on average attempted ' + str(averageAns) + ' of ' + str(numQ) + ' questions.\n')
statsfile.close
